name: Testing PyTorch nightly
on:
  push:
    branches:
      - master
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ startsWith(github.ref, 'refs/pull/') || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  latest_pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 40
          
      - name: Get changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v41
        with:
          files: |
            benchmark/**
            conda/**
            docker/**
            docs/**
            examples/**
            graphgym/**
            README.md
            CHANGELOG.md

      - name: Setup packages
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        uses: ./.github/actions/setup
        with:
          torch-version: nightly

      - name: Install mpmath
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        run: |
          pip install mpmath==1.3.0

      - name: Install main package
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        run: |
          pip install -e .[test]

      # Start energy measurement right before tests
      - name: Start Energy Measurement
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: start-measurement
          
      - name: Run tests
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        timeout-minutes: 10
        run: |
          pytest

      # Display results only if measurement was started
      - name: Display Energy Results
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: display-results
          json-output: true

      - name: Convert JSON to CSV
        if: steps.changed-files-specific.outputs.only_changed != 'true'
        run: |
          if [ -f /tmp/eco-ci/total-data.json ]; then
            jq -r '(.[0] | keys_unsorted) as $keys | $keys, map([.[ $keys[] ]])[] | @csv' /tmp/eco-ci/total-data.json > eco_results.csv
          else
            echo "No JSON output found, skipping conversion."
          fi
